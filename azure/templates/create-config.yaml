jobs:
  - deployment: Deploy
    displayName: Create/update K8s configuration resources
    environment: $(kubernetesEnvironment)
    strategy:
      runOnce:
        deploy:
          steps:
            - checkout: self

            - task: Kubernetes@1
              displayName: Create configmap
              inputs:
                namespace: $(kubernetesNamespace)
                configurationType: configuration
                command: apply
                useConfigurationFile: true
                configuration: $(Build.SourcesDirectory)/infra/k8s/configmap.yaml

            - task: Kubernetes@1
              displayName: Create Dagster secrets
              inputs:
                namespace: $(kubernetesNamespace)
                configurationType: inline
                command: apply
                useConfigurationFile: true
                inline: |
                  apiVersion: v1
                  kind: Secret
                  metadata:
                    name: giga-dagster-secrets
                    labels:
                      app: giga-dagster
                  stringData:
                    POSTGRESQL_USERNAME: "$(postgresqlUsername)"
                    POSTGRESQL_PASSWORD: "$(postgresqlPassword)"
                    AZURE_SAS_TOKEN: "$(azureSasToken)"
                    AZURE_STORAGE_ACCOUNT_NAME: "$(azureStorageAccountName)"
                    AZURE_BLOB_CONTAINER_NAME: "$(azureBlobContainerName)"
                    AUTH_OIDC_REDIRECT_URL: "$(datahubAzureAdRedirectUrl)"
                    AUTH_OIDC_CLIENT_ID: "$(azureAdClientId)"
                    AUTH_OIDC_TENANT_ID: "$(azureAdTenantId)"
                    AUTH_OIDC_CLIENT_SECRET: "$(datahubAzureAdClientSecret)"
                    DATAHUB_ACCESS_TOKEN: "$(datahubAccessToken)"
                    DATAHUB_KUBERNETES_NAMESPACE: "$(kubernetesNamespace)"
                    SPARK_RPC_AUTHENTICATION_SECRET: "$(sparkRpcAuthSecret)"
                    SHORT_SHA: "$(Build.SourceVersion)"
                    COMMIT_SHA: "$(Build.SourceVersion)"
                    DEPLOY_ENV: "$(deployEnv)"

            - task: Kubernetes@1
              displayName: Create authproxy secrets
              inputs:
                namespace: $(kubernetesNamespace)
                configurationType: inline
                command: apply
                useConfigurationFile: true
                inline: |
                  apiVersion: v1
                  kind: Secret
                  metadata:
                    name: giga-dagster-authproxy-secrets
                    labels:
                      app: giga-dagster
                  stringData:
                    AZURE_TENANT_ID: "$(azureAdTenantId)"
                    AZURE_CLIENT_ID: "$(azureAdClientId)"
                    AZURE_CLIENT_SECRET: "$(azureAdClientSecret)"
                    AZURE_REDIRECT_URI: "https://$(appDomain)/auth/callback"
                    cookie-secret: "$(cookieSecret)"
                    client-id: "$(azureAdClientId)"
                    client-secret: "$(azureAdClientSecret)"
                    OAUTH2_PROXY_AZURE_TENANT: "$(azureAdTenantId)"
                    OAUTH2_PROXY_REDIRECT_URL: "https://$(appDomain)/auth/callback"
                    OAUTH2_PROXY_OIDC_ISSUER_URL: "https://login.microsoftonline.com/$(azureAdTenantId)/v2.0"

            - task: Kubernetes@1
              displayName: Create Spark secrets
              inputs:
                namespace: $(kubernetesNamespace)
                configurationType: inline
                command: apply
                useConfigurationFile: true
                inline: |
                  apiVersion: v1
                  kind: Secret
                  metadata:
                    name: giga-dagster-spark-secrets
                    labels:
                      app: giga-dagster
                  stringData:
                    SPARK_RPC_AUTHENTICATION_SECRET: "$(sparkRpcAuthSecret)"
                    rpc-authentication-secret: "$(sparkRpcAuthSecret)"
                    SPARK_SSL_NEED_CLIENT_AUTH: "yes"
                    SPARK_PUBLIC_DNS: "$(appDomain)"
