version: '3'

dotenv:
  - ./dagster/.env
  - ./authproxy/.env

vars:
  PROJECT_NAME: giga-dataops-platform_dagster
  SHORT_SHA:
    sh: git rev-parse --short HEAD

tasks:
  default:
    cmds:
      - task: up

  up:
    desc: Build and start Docker containers
    cmds:
      - docker compose --project-name giga-dataops-platform --file docker-compose-network.yaml up --detach --build --remove-orphans {{.CLI_ARGS}}
      - docker compose --project-name {{.PROJECT_NAME}} up --detach --build --remove-orphans {{.CLI_ARGS}}

  setup:
    desc: Run all first-time setup tasks
    cmds:
      - task: setup-pre-commit
      - task: setup-dagster
      - task: setup-authproxy

  setup-pre-commit:
    internal: true
    desc: Run first-time setup tasks for pre-commit
    cmds:
      - pip install -U pre-commit
      - pre-commit install

  setup-dagster:
    internal: true
    desc: Run first-time setup tasks for Dagster
    dir: dagster
    cmds:
      - poetry env use 3.11
      - poetry install --with dev,dagster,pipelines,spark,notebook

  setup-authproxy:
    internal: true
    desc: Run first-time setup tasks for authproxy
    dir: authproxy
    cmds:
      - poetry env use 3.11
      - poetry install --with dev

  logs:
    desc: Attach to Docker logs
    cmds:
      - docker compose --project-name {{.PROJECT_NAME}} logs --follow {{.CLI_ARGS}}

  stop:
    desc: Stop containers
    cmds:
      - docker compose --project-name {{.PROJECT_NAME}} stop {{.CLI_ARGS}}

  restart:
    desc: Restart containers
    cmds:
      - docker compose --project-name {{.PROJECT_NAME}} restart {{.CLI_ARGS}}

  exec:
    desc: Run a command in the specified container
    cmds:
      - docker compose --project-name {{.PROJECT_NAME}} exec {{.CLI_ARGS}}

  ps:
    desc: Show running processes in this project
    cmds:
      - docker compose --project-name {{.PROJECT_NAME}} ps

  clean:
    desc: Remove containers
    cmds:
      - docker compose --project-name {{.PROJECT_NAME}} down --volumes --remove-orphans {{.CLI_ARGS}}
      - docker compose --project-name giga-dataops-platform --file docker-compose-network.yaml down --volumes --remove-orphans {{.CLI_ARGS}}

  build-and-push:
    desc: Build and push Docker image
    cmds:
      - task: build-cr
      - task: push-cr

  build-cr:
    internal: true
    desc: Build Docker image
    cmds:
      - docker build --tag {{.DAGSTER_IMAGE_REPOSITORY}}:{{.SHORT_SHA}} -f dagster/prod.Dockerfile dagster
      - docker build --tag {{.DAGSTER_AUTHPROXY_IMAGE_REPOSITORY}}:{{.SHORT_SHA}} -f authproxy/prod.Dockerfile authproxy

  push-cr:
    internal: true
    desc: Build Docker image
    cmds:
      - docker push {{.DAGSTER_IMAGE_REPOSITORY}}:{{.SHORT_SHA}}
      - docker push {{.DAGSTER_AUTHPROXY_IMAGE_REPOSITORY}}:{{.SHORT_SHA}}

  helm-up:
    desc: Install/upgrade Helm charts
    dir: infra
    cmds:
      - kubectl apply -f k8s/secrets.yaml
      - kubectl apply -f k8s/configmap.yaml
      - task: helm-up-dagster
      # - task: helm-up-spark
      - task: helm-up-authproxy

  helm-up-dagster:
    internal: true
    desc: Install/upgrade Dagster Helm chart
    dir: infra/helm
    cmds:
      - >
        helm upgrade --install dagster dagster/dagster
        --values dagster/values.yaml
        --set dagster-user-deployments.deployments[0].image.repository={{.DAGSTER_IMAGE_REPOSITORY}}
        --set dagster-user-deployments.deployments[0].image.tag={{.SHORT_SHA}}
        --set pipelineRun.image.repository={{.DAGSTER_IMAGE_REPOSITORY}}
        --set pipelineRun.image.tag={{.SHORT_SHA}}
        --set postgresql.postgresqlUsername={{.POSTGRESQL_USERNAME}}
        --set postgresql.postgresqlPassword={{.POSTGRESQL_PASSWORD}}

  helm-up-authproxy:
    internal: true
    desc: Install/upgrade authproxy Helm chart
    dir: infra/helm
    cmds:
      - >
        helm upgrade --install dagster-authproxy ./authproxy
        --values authproxy/values.yaml
        --set image.repository={{.DAGSTER_AUTHPROXY_IMAGE_REPOSITORY}}
        --set image.tag={{.SHORT_SHA}}
        --set service.type=LoadBalancer

  helm-up-spark:
    internal: true
    desc: Install/upgrade Spark Helm chart
    dir: infra/helm
    cmds:
      - >
        helm upgrade --install spark bitnami/spark
        --values spark/values.yaml

  helm-down:
    desc: Uninstall Helm charts
    ignore_error: true
    cmds:
      - helm uninstall dagster-authproxy
      # - helm uninstall spark
      - helm uninstall dagster
      - kubectl delete all --all
      - kubectl delete pvc --all
