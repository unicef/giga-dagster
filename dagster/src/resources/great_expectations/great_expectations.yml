# Welcome to Great Expectations! Always know what to expect from your data.
# Here you can define datasources, batch kwargs generators, integrations and more. This file is intended to be committed to your repo. For help with configuration please:
#   - Read our docs: https://docs.greatexpectations.io/en/latest/reference/data_context_reference.html#configuration
#   - Join our slack channel: http://greatexpectations.io/slack

# Datasources tell Great Expectations where your data lives and how to get it.
# You can use the CLI command `great_expectations datasource new` to help you add a new datasource. Read more at https://docs.greatexpectations.io/en/latest/features/datasource.html
#fluent_datasources:
config_version: 3.0
datasources:
  spark_datasource:
    class_name: Datasource
    module_name: great_expectations.datasource
    execution_engine:
      class_name: SparkDFExecutionEngine
      module_name: great_expectations.execution_engine
    data_connectors:
      runtime_data_connector:
        name: runtime_data_connector
        class_name: RuntimeDataConnector
        module_name: great_expectations.datasource.data_connector
        batch_identifiers:
          - name
          - step
expectations_store_name: expectations_store
validations_store_name: validations_store
evaluation_parameter_store_name: evaluation_parameter_store
checkpoint_store_name: checkpoint_store
profiler_store_name: profiler_store
plugins_directory: plugins/expectations/
stores:
  expectations_store:
    class_name: ExpectationsStore
    store_backend:
      class_name: TupleFilesystemStoreBackend
      base_directory: expectations/

  validations_store:
    class_name: ValidationsStore
    store_backend:
      class_name: TupleFilesystemStoreBackend
      base_directory: uncommitted/validations/
  evaluation_parameter_store:
    class_name: EvaluationParameterStore
  checkpoint_store:
    class_name: CheckpointStore
    store_backend:
      class_name: TupleFilesystemStoreBackend
      base_directory: checkpoints/
  # expectations_store:
  #   class_name: ExpectationsStore
  #   store_backend:
  #     class_name: InMemoryStoreBackend
  # validations_store:
  #   class_name: ValidationsStore
  #   store_backend:
  #     class_name: InMemoryStoreBackend
  # evaluation_parameter_store:
  #   class_name: EvaluationParameterStore
  # checkpoint_store:
  #   class_name: CheckpointStore
  #   store_backend:
  #     class_name: InMemoryStoreBackend
  profiler_store:
    class_name: ProfilerStore
    store_backend:
      class_name: InMemoryStoreBackend
notebooks:
data_docs_sites:
  # Data Docs make it simple to visualize data quality in your project. These
  # include Expectations, Validations & Profiles. The are built for all
  # Datasources from JSON artifacts in the local repo including validations &
  # profiles from the uncommitted directory. Read more at https://docs.greatexpectations.io/docs/terms/data_docs
  local_site:
    class_name: SiteBuilder
    show_how_to_buttons: true
    store_backend:
      class_name: TupleFilesystemStoreBackend
      base_directory: uncommitted/data_docs/local_site/
    site_index_builder:
      class_name: DefaultSiteIndexBuilder
  # adls_site:
  #   class_name: SiteBuilder
  #   store_backend:
  #     class_name: TupleAzureBlobStoreBackend
  #     container: giga-dataops-dev
  #   account_url: ${AZURE_SAS_HOST_URL}
  #   prefix: logs-gx
  #   site_index_builder:
  #     class_name: DefaultSiteIndexBuilder
anonymous_usage_statistics:
  data_context_id: 8d1da6f3-73e3-40f9-b2fc-bbcd1b771a82
  enabled: true
include_rendered_content:
  globally: false
  expectation_suite: false
  expectation_validation_result: false
config_variables_file_path:
