{
  "expectation_suite_name": "expectation_school_geolocation",
  "ge_cloud_id": null,
  "expectations": [
    {
      "expectation_type": "expect_column_values_to_be_unique",
      "kwargs": {
        "column": "school_id"
      },
      "meta": {
        "notes": {
          "format": "markdown",
          "content": "Indicates if the school_id entries do not have an exact match"
        }
      }
    },
    {
      "expectation_type": "expect_column_values_to_be_unique",
      "kwargs": {
        "column": "school_id_giga"
      },
      "meta": {
        "notes": {
          "format": "markdown",
          "content": "Indicates if the school_id_giga entries do not have an exact match"
        }
      }
    },
    {
      "expectation_type": "expect_column_values_to_not_be_null",
      "kwargs": {
        "column": "school_name"
      },
      "meta": {
        "notes": {
          "format": "markdown",
          "content": "This expects the column school_name to have a value."
        }
      }
    },
    {
      "expectation_type": "expect_column_values_to_not_be_null",
      "kwargs": {
        "column": "longitude"
      },
      "meta": {
        "notes": {
          "format": "markdown",
          "content": "This expects the column longitude to have a value."
        }
      }
    },
    {
      "expectation_type": "expect_column_values_to_not_be_null",
      "kwargs": {
        "column": "latitude"
      },
      "meta": {
        "notes": {
          "format": "markdown",
          "content": "This expects the column latitude to have a value."
        }
      }
    },
    {
      "expectation_type": "expect_column_values_to_not_be_null",
      "kwargs": {
        "column": "education_level"
      },
      "meta": {
        "notes": {
          "format": "markdown",
          "content": "This expects the column education_level to have a value."
        }
      }
    },
    {
      "expectation_type": "expect_column_values_to_be_between",
      "kwargs": {
        "column": "internet_speed_mbps",
        "min_value": 1,
        "max_value": 20
      },
      "meta": {
        "notes": {
          "format": "markdown",
          "content": "This expects the column internet_speed_mbps to have a value between 1 and 20."
        }
      }
    },
    {
      "expectation_type": "expect_column_values_to_be_between",
      "kwargs": {
        "column": "student_count",
        "min_value": 20,
        "max_value": 2500
      },
      "meta": {
        "notes": {
          "format": "markdown",
          "content": "This expects the column student_count to have a value between 20 and 2500."
        }
      }
    },
    {
      "expectation_type": "expect_column_values_to_be_between",
      "kwargs": {
        "column": "latitude",
        "min_value": -90,
        "max_value": 90
      },
      "meta": {
        "notes": {
          "format": "markdown",
          "content": "This expects the column latitude to have a value between -90 and 90."
        }
      }
    },
    {
      "expectation_type": "expect_column_values_to_be_between",
      "kwargs": {
        "column": "longitude",
        "min_value": -180,
        "max_value": 180
      },
      "meta": {
        "notes": {
          "format": "markdown",
          "content": "This expects the column longitude to have a value between -180 and 180."
        }
      }
    },
    {
      "expectation_type": "expect_column_values_to_be_between",
      "kwargs": {
        "column": "school_density",
        "min_value": 0,
        "max_value": 5
      },
      "meta": {
        "notes": {
          "format": "markdown",
          "content": "This expects the column school_density to have a value between 0 and 5."
        }
      }
    },
    {
      "expectation_type": "expect_column_values_to_be_between",
      "kwargs": {
        "column": "num_computers",
        "min_value": 0,
        "max_value": 500
      },
      "meta": {
        "notes": {
          "format": "markdown",
          "content": "This expects the column num_computers to have a value between 0 and 500."
        }
      }
    },
    {
      "expectation_type": "expect_column_values_to_be_between",
      "kwargs": {
        "column": "num_students",
        "min_value": 0,
        "max_value": 10000
      },
      "meta": {
        "notes": {
          "format": "markdown",
          "content": "This expects the column num_students to have a value between 0 and 10000."
        }
      }
    },
    {
      "expectation_type": "expect_column_values_to_be_between",
      "kwargs": {
        "column": "num_classrooms",
        "min_value": 0,
        "max_value": 200
      },
      "meta": {
        "notes": {
          "format": "markdown",
          "content": "This expects the column num_classrooms to have a value between 0 and 200."
        }
      }
    },
    {
      "expectation_type": "expect_column_values_to_be_in_set",
      "kwargs": {
        "column": "computer_lab",
        "value_set": [
          "yes",
          "no"
        ]
      },
      "meta": {
        "notes": {
          "format": "markdown",
          "content": "This expects the column computer_lab to have a value within the set ['yes', 'no']."
        }
      }
    },
    {
      "expectation_type": "expect_column_values_to_be_in_set",
      "kwargs": {
        "column": "electricity_availability",
        "value_set": [
          "yes",
          "no"
        ]
      },
      "meta": {
        "notes": {
          "format": "markdown",
          "content": "This expects the column electricity_availability to have a value within the set ['yes', 'no']."
        }
      }
    },
    {
      "expectation_type": "expect_column_values_to_be_in_set",
      "kwargs": {
        "column": "water_availability",
        "value_set": [
          "yes",
          "no"
        ]
      },
      "meta": {
        "notes": {
          "format": "markdown",
          "content": "This expects the column water_availability to have a value within the set ['yes', 'no']."
        }
      }
    },
    {
      "expectation_type": "expect_column_values_to_be_in_set",
      "kwargs": {
        "column": "cellular_network_availability",
        "value_set": [
          "yes",
          "no"
        ]
      },
      "meta": {
        "notes": {
          "format": "markdown",
          "content": "This expects the column cellular_network_availability to have a value within the set ['yes', 'no']."
        }
      }
    },
    {
      "expectation_type": "expect_column_values_to_be_in_set",
      "kwargs": {
        "column": "connectivity_availability",
        "value_set": [
          "yes",
          "no"
        ]
      },
      "meta": {
        "notes": {
          "format": "markdown",
          "content": "This expects the column connectivity_availability to have a value within the set ['yes', 'no']."
        }
      }
    },
    {
      "expectation_type": "expect_column_values_to_be_in_set",
      "kwargs": {
        "column": "school_is_open",
        "value_set": [
          "yes",
          "no"
        ]
      },
      "meta": {
        "notes": {
          "format": "markdown",
          "content": "This expects the column school_is_open to have a value within the set ['yes', 'no']."
        }
      }
    },
    {
      "expectation_type": "expect_column_values_to_be_in_set",
      "kwargs": {
        "column": "school_daily_check_app",
        "value_set": [
          "yes",
          "no"
        ]
      },
      "meta": {
        "notes": {
          "format": "markdown",
          "content": "This expects the column school_daily_check_app to have a value within the set ['yes', 'no']."
        }
      }
    },
    {
      "expectation_type": "expect_column_values_to_be_in_set",
      "kwargs": {
        "column": "2G_coverage",
        "value_set": [
          "true",
          "false"
        ]
      },
      "meta": {
        "notes": {
          "format": "markdown",
          "content": "This expects the column 2G_coverage to have a value within the set ['true', 'false']."
        }
      }
    },
    {
      "expectation_type": "expect_column_values_to_be_in_set",
      "kwargs": {
        "column": "3G_coverage",
        "value_set": [
          "true",
          "false"
        ]
      },
      "meta": {
        "notes": {
          "format": "markdown",
          "content": "This expects the column 3G_coverage to have a value within the set ['true', 'false']."
        }
      }
    },
    {
      "expectation_type": "expect_column_values_to_be_in_set",
      "kwargs": {
        "column": "4G_coverage",
        "value_set": [
          "true",
          "false"
        ]
      },
      "meta": {
        "notes": {
          "format": "markdown",
          "content": "This expects the column 4G_coverage to have a value within the set ['true', 'false']."
        }
      }
    },
    {
      "expectation_type": "expect_column_values_to_be_in_set",
      "kwargs": {
        "column": "education_level_isced",
        "value_set": [
          "childhood education",
          "primary education",
          "secondary education",
          "post secondary education"
        ]
      },
      "meta": {
        "notes": {
          "format": "markdown",
          "content": "This expects the column education_level_isced to have a value within the set ['childhood education', 'primary education', 'secondary education', 'post secondary education']."
        }
      }
    },
    {
      "expectation_type": "expect_column_values_to_be_in_set",
      "kwargs": {
        "column": "connectivity_type",
        "value_set": [
          "fiber",
          "xdsl",
          "wired",
          "cellular",
          "p2mp wireless",
          "p2p wireless",
          "satellite",
          "other"
        ]
      },
      "meta": {
        "notes": {
          "format": "markdown",
          "content": "This expects the column connectivity_type to have a value within the set ['fiber', 'xdsl', 'wired', 'cellular', 'p2mp wireless', 'p2p wireless', 'satellite', 'other']."
        }
      }
    },
    {
      "expectation_type": "expect_column_values_to_be_in_set",
      "kwargs": {
        "column": "school_area_type",
        "value_set": [
          "urban",
          "rural"
        ]
      },
      "meta": {
        "notes": {
          "format": "markdown",
          "content": "This expects the column school_area_type to have a value within the set ['urban', 'rural']."
        }
      }
    },
    {
      "expectation_type": "expect_column_values_to_be_in_set",
      "kwargs": {
        "column": "school_type_public",
        "value_set": [
          "public",
          "not public"
        ]
      },
      "meta": {
        "notes": {
          "format": "markdown",
          "content": "This expects the column school_type_public to have a value within the set ['public', 'not public']."
        }
      }
    },
    {
      "expectation_type": "expect_column_values_to_be_in_set",
      "kwargs": {
        "column": "electricity_type",
        "value_set": [
          "electrical grid",
          "diesel generator",
          "solar power station",
          "other"
        ]
      },
      "meta": {
        "notes": {
          "format": "markdown",
          "content": "This expects the column electricity_type to have a value within the set ['electrical grid', 'diesel generator', 'solar power station', 'other']."
        }
      }
    },
    {
      "expectation_type": "expect_column_values_to_be_in_set",
      "kwargs": {
        "column": "school_data_collection_modality",
        "value_set": [
          "online",
          "in-person",
          "phone",
          "other"
        ]
      },
      "meta": {
        "notes": {
          "format": "markdown",
          "content": "This expects the column school_data_collection_modality to have a value within the set ['online', 'in-person', 'phone', 'other']."
        }
      }
    },
    {
      "expectation_type": "expect_column_values_to_be_in_set",
      "kwargs": {
        "column": "cellular_network_type",
        "value_set": [
          "2g",
          "3g",
          "4g",
          "5g"
        ]
      },
      "meta": {
        "notes": {
          "format": "markdown",
          "content": "This expects the column cellular_network_type to have a value within the set ['2g', '3g', '4g', '5g']."
        }
      }
    },
    {
      "expectation_type": "expect_column_values_to_be_in_set",
      "kwargs": {
        "column": "is_within_country",
        "value_set": [
          "yes",
          "no"
        ]
      },
      "meta": {
        "notes": {
          "format": "markdown",
          "content": "This expects the column is_within_country to have a value within the set ['yes', 'no']."
        }
      }
    },
    {
      "expectation_type": "expect_compound_columns_to_be_unique",
      "kwargs": {
        "column_list": [
          "school_id",
          "school_name",
          "education_level",
          "latitude",
          "longitude"
        ]
      },
      "meta": {
        "notes": {
          "format": "markdown",
          "content": "This indicates the uniqueness of compound columns ['school_id', 'school_name', 'education_level', 'latitude', 'longitude']"
        }
      }
    },
    {
      "expectation_type": "expect_compound_columns_to_be_unique",
      "kwargs": {
        "column_list": [
          "school_name",
          "education_level",
          "latitude",
          "longitude"
        ]
      },
      "meta": {
        "notes": {
          "format": "markdown",
          "content": "This indicates the uniqueness of compound columns ['school_name', 'education_level', 'latitude', 'longitude']"
        }
      }
    },
    {
      "expectation_type": "expect_compound_columns_to_be_unique",
      "kwargs": {
        "column_list": [
          "education_level",
          "latitude",
          "longitude"
        ]
      },
      "meta": {
        "notes": {
          "format": "markdown",
          "content": "This indicates the uniqueness of compound columns ['education_level', 'latitude', 'longitude']"
        }
      }
    }
  ],
  "data_asset_type": null,
  "meta": {
    "great_expectations_version": "0.18.2"
  }
}
